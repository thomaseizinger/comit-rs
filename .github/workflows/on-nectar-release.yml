name: "Builds and uploads a release build of nectar to a newly created release"

on:
  release:
    types: [created]

jobs:
  release:
    if: startsWith(github.event.release.tag_name, 'nectar-') # only trigger this if we released nectar
    name: Build nectar binary in release mode and upload the binaries to the GitHub release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout tagged commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{ secrets.BOTTY_GITHUB_TOKEN }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Build ${{ matrix.os }} release binary
        id: build
        run: cargo build --release --package nectar

      - name: Extract version from branch name
        id: extract-version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/nectar/}

          echo "::set-output name=version::$VERSION"

      - name: Create archive
        id: create-archive
        run: |
          MACHINE=$(uname -m)
          KERNEL=$(uname -s)
          VERSION=${{ steps.extract-version.outputs.version }}

          ARCHIVE="nectar_${VERSION}_${KERNEL}_${MACHINE}.tar.gz"

          tar -C ./target/release --create --file=$ARCHIVE nectar

          echo "::set-output name=archive::$ARCHIVE"

      - name: Upload ${{ matrix.os }} release binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOTTY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.create-archive.outputs.archive }}
          asset_name: ${{ steps.create-archives.outputs.archive }}
          asset_content_type: application/gzip
